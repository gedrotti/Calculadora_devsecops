name: DevSecOps Pipeline

on:
  push:
    branches: [ "main", "dev", "test" ]
  pull_request:
    branches: [ "main" ]

jobs:
  devsecops:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: üóÇÔ∏è Verificar ambiente
        run: |
          echo "PYTHONPATH=$PYTHONPATH"
          ls -R

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov flake8 detect-secrets

      - name: ‚úÖ Executar testes com cobertura
        run: |
          cd $GITHUB_WORKSPACE
          python -m pytest --cov=calculator --cov-report=term-missing tests/ || echo "‚ö†Ô∏è Testes falharam!"

      - name: üß™ Gerar relat√≥rio HTML de cobertura
        run: |
          python -m pytest --cov=calculator --cov-report=html
          mv htmlcov cobertura_html

      - name: üì¶ Salvar artefato de cobertura
        uses: actions/upload-artifact@v4
        with:
          name: cobertura-html
          path: cobertura_html

      - name: üßπ Lint com flake8
        run: |
          flake8 app/ tests/ || echo "‚ö†Ô∏è C√≥digo n√£o segue padr√£o PEP8!"

      - name: üõ°Ô∏è SAST com Bandit
        run: |
          bandit -r app/ || echo "‚ö†Ô∏è Vulnerabilidades no c√≥digo detectadas!"

      - name: üîê Verificar vulnerabilidades em depend√™ncias
        run: |
          pip-audit || echo "‚ö†Ô∏è Vulnerabilidades em depend√™ncias!"

      - name: üîç Scan por segredos com detect-secrets
        run: |
          detect-secrets scan > .secrets.baseline || echo "‚ö†Ô∏è Poss√≠veis segredos detectados!"
